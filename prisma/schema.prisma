// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

model User {
    id          String       @id
    email       String       @unique
    name        String
    password    String
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    deletedAt   DateTime?
    vehicles    Vehicle[]
    Reservation Reservation?
}

// vehicle is based on UAV type
model Vehicle {
    id           String        @id @default(cuid())
    name         String
    type         Int
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
    deletedAt    DateTime?
    user         User          @relation(fields: [userId], references: [id])
    userId       String
    dataSourceId Int?
    dataUrl      String?
    videoUrl     String?
    gps          Gps?
    battery      Battery?
    status       Status?
    reservations Reservation[]
    boundsId     String?
}

model Gps {
    id        String  @id @default(cuid())
    latitude  Float
    longitude Float
    absolute  Float
    relative  Float
    fixation  Boolean
    vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
    vehicleId String  @unique
}

model Battery {
    id        Int     @id
    voltage   Float
    supply    Int
    vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
    vehicleId String  @unique
}

model Status {
    id          Int     @id
    in_air      Boolean @default(false)
    armed       Boolean @default(false)
    state       Int
    mav_msg     String
    health      Int
    flight_mode Int
    vehicle     Vehicle @relation(fields: [vehicleId], references: [id])
    vehicleId   String  @unique
}

model Reservation {
    id        String   @id @default(cuid())
    startDate DateTime
    endDate   DateTime
    vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
    vehicleId String   @unique
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    bounds    String   @unique
}
